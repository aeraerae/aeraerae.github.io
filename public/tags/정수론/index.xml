<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>정수론 on aerae</title>
    <link>http://localhost:1313/tags/%EC%A0%95%EC%88%98%EB%A1%A0/</link>
    <description>Recent content in 정수론 on aerae</description>
    <image>
      <title>aerae</title>
      <url>http://localhost:1313/images/papermod-cover.png</url>
      <link>http://localhost:1313/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.128.0</generator>
    <language>kr</language>
    <lastBuildDate>Thu, 04 Jul 2024 17:56:40 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%EC%A0%95%EC%88%98%EB%A1%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>등비수열의 합을 빠르게 구하기</title>
      <link>http://localhost:1313/posts/fast-geometric-sequence-sum/</link>
      <pubDate>Thu, 04 Jul 2024 17:56:40 +0900</pubDate>
      <guid>http://localhost:1313/posts/fast-geometric-sequence-sum/</guid>
      <description>Intro 등비수열 $a_{n} = ar^{n-1}$의 합은 $$ S_n = \begin{cases} an &amp;amp;\text{if } r=1\ \newline \frac{a(r^n - 1)}{r-1} &amp;amp;\text{otherwise} \end{cases} $$ 로 나타낼 수 있습니다.
$r=1$일 때 $S_n$이 다른 이유는, $\frac{a(r^n - 1)}{r-1}$의 분모가 $0$이 되기 때문입니다.
이때는, $1$항부터 $n$항까지가 모두 $a$로 같으니, 간단하게 $an$으로 나타낼 수 있습니다.
$n$이 커지면 커질 수록 $S_n$은 (말 그대로) 기하급수적으로 커지기 때문에, 일반적으로 PS에서는 $S_n$을 $m$으로 나눈 나머지를 구하도록 합니다.
따라서, 이 글에서는 등비수열의 합 $S_n\ \textrm{mod}\ m$을 빠르게 구할 방법을 소개하겠습니다.</description>
    </item>
    <item>
      <title>Test Post</title>
      <link>http://localhost:1313/posts/test-post/</link>
      <pubDate>Fri, 28 Jun 2024 17:30:24 +0900</pubDate>
      <guid>http://localhost:1313/posts/test-post/</guid>
      <description>테스트 입니다. 블로그를 옮겼습니다. 기존 블로그는 더 이상 사용하지 않습니다.
지금 사용중인 theme은 KaTeX 지원을 한다고 들었습니다.
해보니까 안 돼서 직접 넣었습니다&amp;hellip;
$$ \sin x = \sum _{n=0}^{\infty} \frac{(-1)^n x^{2n+1}}{(2n+1)!} $$
등비수열 $ a_{n} = ar^{n-1} $의 합은 어쩌구
잘 되네요.
Code block과 Syntax highlighting 테스트
1 2 3 4 5 6 7 8 9 10 fn miller_robin(n: u64, a: u64) -&amp;gt; bool { if a % n == 0 { return true; } let mut k = n - 1; loop { let temp = fexp(a as u128, k as u128, n as u128) as u64; if temp == n - 1 { return true; } if k &amp;amp; 1 == 1 { return temp == 1 || temp == n-1; } k &amp;gt;&amp;gt;= 1; } } 만족스럽습니다.</description>
    </item>
  </channel>
</rss>
